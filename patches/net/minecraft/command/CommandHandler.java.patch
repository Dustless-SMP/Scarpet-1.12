--- ../src-base/minecraft/net/minecraft/command/CommandHandler.java
+++ ../src-work/minecraft/net/minecraft/command/CommandHandler.java
@@ -1,5 +1,6 @@
 package net.minecraft.command;
 
+import carpet.script.exception.InternalExpressionException;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
@@ -17,6 +18,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.worldedit.WorldEditBridge;
+import net.minecraft.entity.player.EntityPlayerMP;
+
 public abstract class CommandHandler implements ICommandManager
 {
     private static final Logger field_147175_a = LogManager.getLogger();
@@ -37,6 +41,12 @@
         astring = func_71559_a(astring);
         ICommand icommand = this.field_71562_a.get(s);
         int i = 0;
+        
+        EntityPlayerMP worldEditPlayer = p_71556_1_ instanceof EntityPlayerMP ? (EntityPlayerMP) p_71556_1_ : null;
+        boolean nonWorldEditCommand = icommand != null && !icommand.getClass().getName().startsWith("carpet.worldedit.");
+        boolean weEnabledPre = WorldEditBridge.worldEditEnabled();
+        if (nonWorldEditCommand)
+            WorldEditBridge.startEditSession(worldEditPlayer);
 
         try
         {
@@ -50,6 +60,7 @@
             }
             else if (icommand.func_184882_a(this.func_184879_a(), p_71556_1_))
             {
+                WorldEditBridge.onCommand(icommand, p_71556_1_, astring);
                 if (j > -1)
                 {
                     List<Entity> list = EntitySelector.<Entity>func_179656_b(p_71556_1_, astring[j], Entity.class);
@@ -96,6 +107,11 @@
             textcomponenttranslation.func_150256_b().func_150238_a(TextFormatting.RED);
             p_71556_1_.func_145747_a(textcomponenttranslation);
         }
+        finally
+        {
+            if (nonWorldEditCommand && weEnabledPre)
+                WorldEditBridge.finishEditSession(worldEditPlayer);
+        }
 
         p_71556_1_.func_174794_a(CommandResultStats.Type.SUCCESS_COUNT, i);
         return i;
@@ -108,6 +124,9 @@
             p_175786_3_.func_184881_a(this.func_184879_a(), p_175786_1_, p_175786_2_);
             return true;
         }
+
+        catch(InternalExpressionException ignored){} // cos scarpet will have its own exception handling
+
         catch (WrongUsageException wrongusageexception)
         {
             TextComponentTranslation textcomponenttranslation2 = new TextComponentTranslation("commands.generic.usage", new Object[] {new TextComponentTranslation(wrongusageexception.getMessage(), wrongusageexception.func_74844_a())});
