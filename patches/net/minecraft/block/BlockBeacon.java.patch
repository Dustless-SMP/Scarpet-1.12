--- ../src-base/minecraft/net/minecraft/block/BlockBeacon.java
+++ ../src-work/minecraft/net/minecraft/block/BlockBeacon.java
@@ -20,6 +20,11 @@
 import net.minecraft.world.WorldServer;
 import net.minecraft.world.chunk.Chunk;
 
+import carpet.CarpetSettings;
+import net.minecraft.world.gen.ChunkProviderServer;
+
+import javax.security.auth.callback.CallbackHandler;
+
 public class BlockBeacon extends BlockContainer
 {
     public BlockBeacon()
@@ -93,6 +98,11 @@
             ((TileEntityBeacon)tileentity).func_174908_m();
             p_189540_2_.func_175641_c(p_189540_3_, this, 1, 0);
         }
+
+        if (CarpetSettings.asyncBeaconUpdates && p_189540_2_.func_175640_z(p_189540_3_))
+        {
+            HttpUtil.field_180193_a.submit(() -> p_189540_2_.func_175722_b(p_189540_3_, this, true));
+        }
     }
 
     public static void func_176450_d(final World p_176450_0_, final BlockPos p_176450_1_)
@@ -134,4 +144,74 @@
             }
         });
     }
+
+    public static volatile boolean aliveRegion = false;
+    public static volatile int dead = 0;
+    public static volatile int alive = 0;
+    public static volatile int job = 0;
+    public static volatile boolean working = false;
+
+    public static volatile long time1 = 0;
+    public static volatile long time2 = 0;
+    public static volatile long time3 = 0;
+    public static volatile long time4 = 0;
+    public static volatile long counter = 1;
+
+    public static void updateColorAsync2(final World worldIn, final BlockPos glassPos)
+    {
+        HttpUtil.field_180193_a.submit(new Runnable()
+        {
+            public void run()
+            {
+                ChunkProviderServer.list.set(true);
+                Chunk chunk = worldIn.func_175726_f(glassPos);
+
+                int i = Integer.MAX_VALUE;
+                for (;;)
+                {
+                    if(BlockBeacon.job == 0) return;
+                    if(counter % 10000 == 0) {
+                        time2 = time3 = 0;
+                        time1 = System.nanoTime();
+                    }
+
+                    i--;
+                    final BlockPos blockpos = new BlockPos(glassPos.func_177958_n(), i % 255, glassPos.func_177952_p());
+
+                    if (!chunk.func_177444_d(blockpos))
+                    {
+                        working = true;
+                        //break;
+                    }
+
+                    IBlockState iblockstate = worldIn.func_180495_p(blockpos);
+
+                    if (iblockstate.func_177230_c() == Blocks.field_150461_bJ)
+                    {
+                        ((WorldServer)worldIn).func_152344_a(new Runnable()
+                        {
+                            public void run()
+                            {
+                                TileEntity tileentity = worldIn.func_175625_s(blockpos);
+
+                                if (tileentity instanceof TileEntityBeacon)
+                                {
+                                    ((TileEntityBeacon)tileentity).func_174908_m();
+                                    worldIn.func_175641_c(blockpos, Blocks.field_150461_bJ, 1, 0);
+                                }
+                            }
+                        });
+                    }
+                    if(counter % 10000 == 0) {
+                        time4 = System.nanoTime();
+                        long bigTime = BlockBeacon.time4 - BlockBeacon.time1;
+                        long smallTime = BlockBeacon.time3 - BlockBeacon.time2;
+
+                        System.out.println("Everything " + bigTime + " " + smallTime + " " + (double)((double)smallTime / (double)bigTime));
+                    }
+                    if(BlockBeacon.job == 2)counter++;
+                }
+            }
+        });
+    }
 }
